name: Push Frontend Dev - Docker Build & Test & Deploy

env:
  ENVIRONMENT_NAME: Development
  ENVIRONMENT_URL: https://d3i19dhhon0a88.cloudfront.net
  DIST_DIR: dist

on:
  push:
    branches:
      - dev
    paths:
      - 'train-ticket-machine-frontend/**'
      - '.github/workflows/push-frontend-dev.yml'
jobs:
  build_and_test:
    runs-on: ubuntu-latest
    environment: ${{ env.ENVIRONMENT_NAME }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./train-ticket-machine-frontend
          file: ./train-ticket-machine-frontend/Dockerfile.build
          tags: train-ticket-machine-frontend:pr
          load: true
          build-args: |
            VITE_SENTRY_DSN=${{ secrets.VITE_SENTRY_DSN }}
            VITE_APP_ENV=development
            VITE_COMMIT_SHA=${{ github.sha }}
            SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}
            VITE_STATSIG_CLIENT_KEY=${{ secrets.VITE_STATSIG_CLIENT_KEY }}

      - name: Run tests in Docker container
        run: docker run --rm train-ticket-machine-frontend:pr npm run test

      - name: Run test coverage in Docker container
        run: docker run --rm train-ticket-machine-frontend:pr npm run coverage

      - name: Create container to extract build output
        run: docker create --name extract train-ticket-machine-frontend:pr

      - name: Copy build output
        run: docker cp extract:/app/${{ env.DIST_DIR }} ./${{ env.DIST_DIR }}

      - name: Remove extraction container
        run: docker rm extract

      - name: Upload dist directory as artifact
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: ${{ env.DIST_DIR }}

  deploy:
    needs:
      - build_and_test
    runs-on: ubuntu-latest
    environment:
      name: ${{ env.ENVIRONMENT_NAME }}
      url: ${{ env.ENVIRONMENT_URL }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download dist directory
        uses: actions/download-artifact@v3
        with:
          name: dist-files
          path: ${{ env.DIST_DIR }}

      - name: Deploy to S3
        uses: ./.github/actions/aws-s3-sync
        with:
          bucket-name: ${{ secrets.S3_BUCKET_NAME }}
          cloudfront-distribution-id: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
          aws-region: ${{ secrets.AWS_REGION }}
          bundle-dir: ${{ env.DIST_DIR }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}